/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { NgZone } from '@angular/core';
var ElementZoneStrategy = /** @class */ (function () {
    function ElementZoneStrategy(strategy, injector) {
        this.strategy = strategy;
        this.injector = injector;
        this.ngZone = this.injector.get(NgZone);
    }
    /**
     * @param {?} element
     * @return {?}
     */
    ElementZoneStrategy.prototype.connect = /**
     * @param {?} element
     * @return {?}
     */
    function (element) {
        var _this = this;
        this.runInZone(function () { _this.strategy.connect(element); });
        this.events = this.strategy.events;
    };
    /**
     * @return {?}
     */
    ElementZoneStrategy.prototype.disconnect = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.runInZone(function () { _this.strategy.disconnect(); });
    };
    /**
     * @param {?} propName
     * @return {?}
     */
    ElementZoneStrategy.prototype.getInputValue = /**
     * @param {?} propName
     * @return {?}
     */
    function (propName) {
        var _this = this;
        // tslint:disable-next-line:arrow-return-shorthand
        return this.runInZone(function () { return _this.strategy.getInputValue(propName); });
    };
    /**
     * @param {?} propName
     * @param {?} value
     * @return {?}
     */
    ElementZoneStrategy.prototype.setInputValue = /**
     * @param {?} propName
     * @param {?} value
     * @return {?}
     */
    function (propName, value) {
        var _this = this;
        this.runInZone(function () { _this.strategy.setInputValue(propName, value); });
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    ElementZoneStrategy.prototype.runInZone = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) { return this.ngZone.run(fn); };
    return ElementZoneStrategy;
}());
export { ElementZoneStrategy };
function ElementZoneStrategy_tsickle_Closure_declarations() {
    /** @type {?} */
    ElementZoneStrategy.prototype.ngZone;
    /** @type {?} */
    ElementZoneStrategy.prototype.events;
    /** @type {?} */
    ElementZoneStrategy.prototype.strategy;
    /** @type {?} */
    ElementZoneStrategy.prototype.injector;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWxlbWVudC16b25lLXN0cmF0ZWd5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vZWxlbWVudHMtem9uZS1zdHJhdGVneS8iLCJzb3VyY2VzIjpbImxpYi9lbGVtZW50LXpvbmUtc3RyYXRlZ3kudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxNQUFNLEVBQVksTUFBTSxlQUFlLENBQUM7QUFLakQsSUFBQTtJQUtJLDZCQUFzQixRQUEyQixFQUFZLFFBQWtCO1FBQXpELGFBQVEsR0FBUixRQUFRLENBQW1CO1FBQVksYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUMzRSxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFTLE1BQU0sQ0FBQyxDQUFDO0tBQ25EOzs7OztJQUVELHFDQUFPOzs7O0lBQVAsVUFBUSxPQUFvQjtRQUE1QixpQkFJQztRQUhHLElBQUksQ0FBQyxTQUFTLENBQUMsY0FBUSxLQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUUxRCxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDO0tBQ3RDOzs7O0lBRUQsd0NBQVU7OztJQUFWO1FBQUEsaUJBRUM7UUFERyxJQUFJLENBQUMsU0FBUyxDQUFDLGNBQVEsS0FBSSxDQUFDLFFBQVEsQ0FBQyxVQUFVLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztLQUN6RDs7Ozs7SUFDRCwyQ0FBYTs7OztJQUFiLFVBQWMsUUFBZ0I7UUFBOUIsaUJBR0M7O1FBREcsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsY0FBUSxNQUFNLENBQUMsS0FBSSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7S0FDbEY7Ozs7OztJQUNELDJDQUFhOzs7OztJQUFiLFVBQWMsUUFBZ0IsRUFBRSxLQUFhO1FBQTdDLGlCQUVDO1FBREcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxjQUFRLEtBQUksQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLFFBQVEsRUFBRSxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztLQUMzRTs7Ozs7SUFFTyx1Q0FBUzs7OztjQUFDLEVBQWEsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUM7OEJBL0JsRTtJQWdDQyxDQUFBO0FBM0JELCtCQTJCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nWm9uZSwgSW5qZWN0b3IgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IE5nRWxlbWVudFN0cmF0ZWd5RXZlbnQsIE5nRWxlbWVudFN0cmF0ZWd5IH0gZnJvbSAnQGFuZ3VsYXIvZWxlbWVudHMnO1xuXG5cbmV4cG9ydCBjbGFzcyBFbGVtZW50Wm9uZVN0cmF0ZWd5IHtcbiAgICBwcml2YXRlIG5nWm9uZTogTmdab25lO1xuXG4gICAgZXZlbnRzOiBPYnNlcnZhYmxlPE5nRWxlbWVudFN0cmF0ZWd5RXZlbnQ+O1xuXG4gICAgY29uc3RydWN0b3IocHJvdGVjdGVkIHN0cmF0ZWd5OiBOZ0VsZW1lbnRTdHJhdGVneSwgcHJvdGVjdGVkIGluamVjdG9yOiBJbmplY3Rvcikge1xuICAgICAgICB0aGlzLm5nWm9uZSA9IHRoaXMuaW5qZWN0b3IuZ2V0PE5nWm9uZT4oTmdab25lKTtcbiAgICB9XG5cbiAgICBjb25uZWN0KGVsZW1lbnQ6IEhUTUxFbGVtZW50KTogdm9pZCB7XG4gICAgICAgIHRoaXMucnVuSW5ab25lKCgpID0+IHsgdGhpcy5zdHJhdGVneS5jb25uZWN0KGVsZW1lbnQpOyB9KTtcblxuICAgICAgICB0aGlzLmV2ZW50cyA9IHRoaXMuc3RyYXRlZ3kuZXZlbnRzO1xuICAgIH1cblxuICAgIGRpc2Nvbm5lY3QoKTogdm9pZCB7XG4gICAgICAgIHRoaXMucnVuSW5ab25lKCgpID0+IHsgdGhpcy5zdHJhdGVneS5kaXNjb25uZWN0KCk7IH0pO1xuICAgIH1cbiAgICBnZXRJbnB1dFZhbHVlKHByb3BOYW1lOiBzdHJpbmcpIHtcbiAgICAgICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOmFycm93LXJldHVybi1zaG9ydGhhbmRcbiAgICAgICAgcmV0dXJuIHRoaXMucnVuSW5ab25lKCgpID0+IHsgcmV0dXJuIHRoaXMuc3RyYXRlZ3kuZ2V0SW5wdXRWYWx1ZShwcm9wTmFtZSk7IH0pO1xuICAgIH1cbiAgICBzZXRJbnB1dFZhbHVlKHByb3BOYW1lOiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5ydW5JblpvbmUoKCkgPT4geyB0aGlzLnN0cmF0ZWd5LnNldElucHV0VmFsdWUocHJvcE5hbWUsIHZhbHVlKTsgfSk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBydW5JblpvbmUoZm46ICgpID0+IGFueSkgeyByZXR1cm4gdGhpcy5uZ1pvbmUucnVuKGZuKTsgfVxufVxuIl19