{"version":3,"file":"elements-zone-strategy.js","sources":["ng://elements-zone-strategy/lib/element-zone-strategy.ts","ng://elements-zone-strategy/lib/element-zone-strategy-factory.ts"],"sourcesContent":["import { NgZone, Injector } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { NgElementStrategyEvent, NgElementStrategy } from '@angular/elements';\n\n\nexport class ElementZoneStrategy {\n    private ngZone: NgZone;\n\n    events: Observable<NgElementStrategyEvent>;\n\n    constructor(protected strategy: NgElementStrategy, protected injector: Injector) {\n        this.ngZone = this.injector.get<NgZone>(NgZone);\n    }\n\n    connect(element: HTMLElement): void {\n        this.runInZone(() => { this.strategy.connect(element); });\n\n        this.events = this.strategy.events;\n    }\n\n    disconnect(): void {\n        this.runInZone(() => { this.strategy.disconnect(); });\n    }\n    getInputValue(propName: string) {\n        // tslint:disable-next-line:arrow-return-shorthand\n        return this.runInZone(() => { return this.strategy.getInputValue(propName); });\n    }\n    setInputValue(propName: string, value: string): void {\n        this.runInZone(() => { this.strategy.setInputValue(propName, value); });\n    }\n\n    private runInZone(fn: () => any) { return this.ngZone.run(fn); }\n}\n","import { Injector, Type } from '@angular/core';\nimport { createCustomElement, NgElementStrategy, NgElementStrategyFactory } from '@angular/elements';\nimport { ElementZoneStrategy } from './element-zone-strategy';\n\nexport class ElementZoneStrategyFactory implements NgElementStrategyFactory {\n  static counter = 1;\n  private ngElement;\n\n  protected string4() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  protected generateName() {\n    let result = 'dummy-name-n';\n\n    const temp = ElementZoneStrategyFactory.counter + '';\n\n    result = result + temp + '-' + this.string4() + this.string4() + this.string4() + '-' +\n      this.string4() + this.string4() + '-' + this.string4();\n\n    ElementZoneStrategyFactory.counter++;\n    return result;\n  }\n\n  constructor(private component: Type<any>, private injector: Injector) {\n    this.ngElement = createCustomElement(this.component, { injector: this.injector });\n    // this is to keep the document-register-element polyfill happy\n    // it doesn't like creating elements before the define, so we fill the registry with a random definition\n    customElements.define(this.generateName(), this.ngElement);\n  }\n\n  create(injector: Injector): NgElementStrategy {\n    // the only way to get a default strategy outside @angular/elements\n    // is to create the ngElement/ngElementImpl and get it from a property\n    let tempElement = new this.ngElement(this.injector);\n    const strategy = tempElement['ngElementStrategy'];\n    tempElement = null;\n\n    return new ElementZoneStrategy(strategy, this.injector);\n  }\n}\n"],"names":[],"mappings":";;;;;;;AAAA;;;;;IAUI,YAAsB,QAA2B,EAAY,QAAkB;QAAzD,aAAQ,GAAR,QAAQ,CAAmB;QAAY,aAAQ,GAAR,QAAQ,CAAU;QAC3E,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAS,MAAM,CAAC,CAAC;KACnD;;;;;IAED,OAAO,CAAC,OAAoB;QACxB,IAAI,CAAC,SAAS,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;QAE1D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;KACtC;;;;IAED,UAAU;QACN,IAAI,CAAC,SAAS,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC;KACzD;;;;;IACD,aAAa,CAAC,QAAgB;;QAE1B,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;KAClF;;;;;;IACD,aAAa,CAAC,QAAgB,EAAE,KAAa;QACzC,IAAI,CAAC,SAAS,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;KAC3E;;;;;IAEO,SAAS,CAAC,EAAa,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;CACjE;;;;;;AC/BD;;;;;IAuBE,YAAoB,SAAoB,EAAU,QAAkB;QAAhD,cAAS,GAAT,SAAS,CAAW;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAClE,IAAI,CAAC,SAAS,GAAG,mBAAmB,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;;;QAGlF,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;KAC5D;;;;IArBS,OAAO;QACf,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,IAAI,OAAO,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;KAC5E;;;;IAES,YAAY;QACpB,qBAAI,MAAM,GAAG,cAAc,CAAC;QAE5B,uBAAM,IAAI,GAAG,0BAA0B,CAAC,OAAO,GAAG,EAAE,CAAC;QAErD,MAAM,GAAG,MAAM,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,GAAG;YACnF,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAEzD,0BAA0B,CAAC,OAAO,EAAE,CAAC;QACrC,OAAO,MAAM,CAAC;KACf;;;;;IASD,MAAM,CAAC,QAAkB;;;QAGvB,qBAAI,WAAW,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACpD,uBAAM,QAAQ,GAAG,WAAW,CAAC,mBAAmB,CAAC,CAAC;QAClD,WAAW,GAAG,IAAI,CAAC;QAEnB,OAAO,IAAI,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;KACzD;;qCAlCgB,CAAC;;;;;;;;;;;;;;"}